/*
 * RAUS! An der GUI wird noch nicht gearbeitet!
 */
package FinalWork.GUI;

import Logic.Types.Depot;
import Logic.Types.Driver;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

/**
 *
 * @author markus
 */
public class MainGUI extends javax.swing.JFrame {
    /**
     * Creates new form MainGUI
     * @param drivers
     */
    
    public MainGUI(Driver driver) {
        initComponents();
        
        Panel panel = new Panel(driver);       
        panel.setLayout(new BorderLayout());
        this.setContentPane(panel);
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1238, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 934, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private static class Panel extends JPanel {
        private final Driver driver;

        public Panel (Driver driver) {
            this.driver = driver;
        }
        
        @Override
        public void paint(Graphics g) {
            // Setting drawing parameters
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(
                    RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setStroke(new BasicStroke(2,
                    BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));
            
            g2d.drawLine((int) (Depot.depot.getX()),
                    (int) (Depot.depot.getY()), 
                    (int) (driver.clientsToServe[0].getX()), 
                    (int) (driver.clientsToServe[0].getY()));
            for (int j = 0; j < driver.clientsToServe.length - 1; j++) {
                //g2d.setColor(Color.BLACK);
                g2d.fillOval((int) driver.clientsToServe[j].getX() - 5, (int) driver.clientsToServe[j].getY() - 5, 10, 10);
                g2d.drawString(driver.clientsToServe[j].getID(), (int) driver.clientsToServe[j].getX() + 4, (int) driver.clientsToServe[j].getY());
                //g2d.setColor(getColor(i));
                g2d.drawLine((int) (driver.clientsToServe[j].getX()),
                                (int) (driver.clientsToServe[j].getY()),
                                (int) (driver.clientsToServe[j+1].getX()),
                                (int) (driver.clientsToServe[j+1].getY()));
            }
            g2d.fillOval((int) driver.clientsToServe[driver.clientsToServe.length-1].getX() - 5, (int) driver.clientsToServe[driver.clientsToServe.length-1].getY() - 5, 10, 10);
            g2d.drawString(driver.clientsToServe[driver.clientsToServe.length-1].getID(),
                    (int) driver.clientsToServe[driver.clientsToServe.length-1].getX() + 4,
                    (int) driver.clientsToServe[driver.clientsToServe.length-1].getY());
            g2d.drawLine((int) (Depot.depot.getX()), 
                        (int) (Depot.depot.getY()), 
                        (int) (driver.clientsToServe[driver.clientsToServe.length-1].getX()), 
                        (int) (driver.clientsToServe[driver.clientsToServe.length-1].getY()));
            /**
            for (int i = 0; i < driver.tour.length; i++) {
                g2d.fillOval((int) driver.tour[i].getStart().getX() - 5, (int) driver.tour[i].getStart().getY() - 5, 10, 10);
                //g2d.drawString(driver.tour[i].getStart()., i, i);
                g2d.drawLine((int) driver.tour[i].getStart().getX(),
                            (int) driver.tour[i].getStart().getY(), 
                            (int) driver.tour[i].getEnd().getX(), 
                            (int) driver.tour[i].getEnd().getY());
                g2d.fillOval((int) driver.tour[i].getEnd().getX() - 5, (int) driver.tour[i].getEnd().getY() - 5, 10, 10);
            }
            */
        }
    }
}
